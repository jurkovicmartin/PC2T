package ProjectFilms;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class FeatureFilm extends Films{
	
	private List<Actor> actors;
	private List<Rating> rating;
	private static List<Actor> allActors = new ArrayList<Actor>();
	
	//vytvoreni filmu
	FeatureFilm(String name, String director, int year){
		super.name = name;
		super.director = director;
		super.year = year;
		actors = new ArrayList<Actor>();
		rating = new ArrayList<Rating>();
	}
	
	public static Actor findActor(String actorName) {
		for(Actor actor : allActors) {
			if(actor.getName().equals(actorName))
				return actor;
		}
		return null;
	}
	
	@Override
	public String toString() {
		return "\nFilm: " + name + ", Director: " + director + ", Year: " + year + "\nActors: " + actors;
	}
	
	public static List<Actor> getActors(String filmName) {
		Films film = findFilm(filmName);
		if(film == null)
			return null;
		return ((FeatureFilm)film).actors;
	}
	
	public static List<Actor> getAllActors(){
		return allActors;
	}
	
	public static List<Actor> getActorsWithMoreThanOneFilm(){
		List<Actor> List = new ArrayList<Actor>();
		for(Actor actor : allActors) {
			if(actor.getFilms().size() > 1) {
				List.add(actor);
			}
		}
		return List;
	}
	
	public static void addActor(String filmName, String actorName) {
		if(allActors.isEmpty()) {
			allActors.add(new Actor(actorName));
		}
		Films film = findFilm(filmName);
		Actor actor = findActor(actorName);
		if(actor != null) {
			((FeatureFilm)film).actors.add(actor);
			actor.addFilm(film);
			return;
		}
		else {
			allActors.add(new Actor(actorName));
			actor = findActor(actorName);
			((FeatureFilm)film).actors.add(actor);
			actor.addFilm(film);
			return;
		}
	}
	
	public static int removeActor(String filmName, String actorName) {
		Films film = findFilm(filmName);
		Actor actor = findActor(actorName);
		if(actor != null) {
			((FeatureFilm)film).actors.remove(actor);
			actor.removeFilm(film);
			return 1;
		}
		return 0;
	}
	/*//pridani hodnoceni bez komentare
	public static void addRating(String filmName, int points) {
		Films film = findFilm(filmName);
		if(film == null)
			return;
		film.
		for(Films film : Films) {
			if(film.name.equals(filmName)) {
				((FeatureFilm)film).rating.add(new Rating(points));
				return;
			}	
		}
	}*/

	//pridani hodnoceni s komentarem
	public static void addRating(String filmName, int points, String comment) {
		for(Films film : Films) {
			if(film.name.equals(filmName)) {
				((FeatureFilm)film).rating.add(new Rating(points, comment));
				return;
			}	
		}
	}
	
	public static List<Rating> getRatings(String filmName) {
		for(Films film : Films) {
			if(film.name.equals(filmName)) {
				Collections.sort(((FeatureFilm)film).rating);
				return ((FeatureFilm)film).rating;
			}
		}
		return null;
	}

}
